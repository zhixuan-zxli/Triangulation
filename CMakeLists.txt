cmake_minimum_required(VERSION 3.5)
project(Doraemon)

if(NOT DIM)
    set(DIM "2")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas -DDIM=${DIM}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
set(CMAKE_CXX_STANDARD 14)

option(USE_OPENMP "Whether to use the OpenMP parallelism." OFF)
if (USE_OPENMP)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_OPENMP -fopenmp")
endif()

option(USE_MPI "Whether to use the MPI parallelism. " OFF)
if(USE_MPI)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_MPI")
endif()

option(PROFILE "Whether to enable profiling. " OFF)
if (PROFILE)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -pg")
endif()

option(USE_MKL "Whether to use the Intel(R) MKL. " OFF)
if(USE_MKL)
    if($ENV{MKLROOT})
        set(MKLROOT "$ENV{MKLROOT}")
    elseif(EXISTS "/opt/intel/mkl")
        set(MKLROOT "/opt/intel/mkl")
    else()
        message(SEND_ERROR "MKL not found!")
    endif()
    message(STATUS "MKLROOT = ${MKLROOT}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64 -DUSE_MKL")
    include_directories(${MKLROOT}/include)
    link_directories(${MKLROOT}/lib)
else()
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(BLAS REQUIRED blas)
    pkg_check_modules(CBLAS cblas) # not mandatory
    pkg_check_modules(LAPACK REQUIRED lapack)
    pkg_check_modules(LAPACKE REQUIRED lapacke)
    include_directories(${BLAS_INCLUDE_DIRS} ${CBLAS_INCLUDE_DIRS} ${LAPACK_INCLUDE_DIRS} ${LAPACKE_INCLUDE_DIRS})
    link_directories(${BLAS_LIBRARY_DIRS} ${CBLAS_LIBRARY_DIRS} ${LAPACK_LIBRARY_DIRS} ${LAPACKE_LIBRARY_DIRS})
endif()

message(STATUS "System : ${CMAKE_SYSTEM_NAME}")
message(STATUS "Build type : ${CMAKE_BUILD_TYPE}")
message(STATUS "CMAKE_CXX_FLAGS : ${CMAKE_CXX_FLAGS}")

set(LIB_NAME "doraemon")

include_directories(src)
add_subdirectory(src)

option(ENABLE_TEST "Whether to enable the tests. " OFF)
if (ENABLE_TEST)
    add_subdirectory(test)
endif()
